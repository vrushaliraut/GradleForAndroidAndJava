//apply plugin: 'com.android.application'

//apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: "java"


task execute(type: JavaExec){
    println 'hello Vrushali!'
}


/*
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "bootcamp.com.gradleforandroidandjava"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
*/

//custome tack - Adhoc task
class HelloTask extends DefaultTask{
    String firstName
    @TaskAction
    void doAction(){
        println "Hello world ,$firstName"
    }
}

task hello(type: HelloTask){
    firstName = 'vrushali'
}

//groovy language
task hello1{
    doLast{
        println 'hello world !'
    }
}

//Declares variable in groovy
task groovy{
    JavaGreeter greeter = new JavaGreeter()
    greeter.sayhello()
    def foo = 9
    println "Foo is of type ${foo.class} and has value: $foo"
    foo = "Reassign"
    println("$foo")
    println "Foo is of type ${foo.class} and has value: $foo"

    //function declaration
    foo = 9
    println("doubleIt($foo) = ${doubleIt(foo)}")


    foo = "fooBar"
    println("doubleIt($foo) = ${doubleIt(foo)}")

    //nested function call
    /*Leave off paranthesis for ambigious functions*/
    oneArgs 500
    twoArgs 200,500
    noArgs()
    twoArgs oneArgs(233), 400

    //closure and object
    /* */
   // myClosure()

    def boo = "brand"
    println "$boo + boo = ${boo + "boo"}"
}

//Declare one java class
class JavaGreeter{
    public static void sayhello() {
        System.out.println('Hello World')
    }
}


//declare functions  in groovy
def doubleIt(n){
    n + n //We don't need return type in groovy functions
}

def noArgs(){
    println "Called the no args function"
}

def oneArgs(x){
    println "Called the one args function $x"
    x
}
def twoArgs(x, y){
    println "Called the two args function $x and $y"
    x + y
}


def foo = "one million dollar"
def myClosure = {
    println "Hello from a closure"
    println "The value of foo is $foo"
}

//groovy list with closure

def myList = ["Gradle","Groovy","Android"]
def printItem = {item -> println "List item $item"}
myList.each(printItem)
myList.each{ printItem "Compactly print each List item $it " }

//task Configuration
task("myTasks2")
task "myTasks3"
task mytask4
mytask4.description = "This is whats shown in task list"
mytask4.group = "Heading for task list"
mytask4.doLast{println "Do this last"}
mytask4.doFirst{println "Do this first"}
mytask4.leftShift{println "Do this even more last"}

//Task dependencies and ordering
task putOnSocks{
    doLast{
        println "Putting on Socks"
    }
}

task putOnShoes{
    dependsOn "PutOnSocks"
    doLast{
        println "Putting on Shoes.."
    }
}


//Task Dependencies :- ShouldRunAfter, mustRunAfter
task takeshower{
    doLast{
        println "Taking a shower"
    }
}

task putOnFragrance{
    shouldRunAfter "takeShower"
    doLast{
        println "Smelling Fresh"
    }
}


//** FILE INTERACTION ***//
task copyImages(type : Copy){
    from 'images'
    into 'build'
}

task copyJPESs(type : Copy){
    from 'images'
    include '*.jpg'
    into 'build'
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    /*implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    */
    //androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

